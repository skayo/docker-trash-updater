name: Update Workflow

on:
  # Schedule every hour
  schedule:
    - cron: '0 * * * *'

  # Also allow manual dispatch
  workflow_dispatch:

jobs:
  update-on-new-release:
    name: Update Repo On New Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout ⤵
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # tag=v3.0.0
        with:
          token: ${{ secrets.SKAYOBOT_GITHUB_TOKEN }}

      - name: Fetch latest version 🌐
        id: version-fetch
        run: |
          curl -sL -X GET https://api.github.com/repos/rcdailey/trash-updater/releases/latest | \
            jq -r '. | .tag_name' > ./version

          echo ::set-output name=version::$(< ./version tr -d '\n')

      - name: Check if version was updated 🧐
        id: version-check
        run: |
          echo ::set-output name=updated::$([ -z "`git status --porcelain ./version`" ] && echo "no" || echo "yes")

      - if: steps.version-check.outputs.updated == 'yes'
        name: Generate dockerfile for version "${{ steps.version-fetch.outputs.version }}" 🖨
        uses: mshick/fast-envsubst@50615afd7fb94e7c4b3cddd58a7f41f63fe0960e # tag=v1
        with:
          in-file: ./tmpl.Dockerfile
          out-file: ./Dockerfile
        env:
          VERSION: ${{ steps.version-fetch.outputs.version }}

      - if: steps.version-check.outputs.updated == 'yes'
        name: Add warning to dockerfile ✏
        run: |
          sed -i '1s/^/#\n# !!! DO NOT EDIT THIS FILE !!!\n# This file is automatically generated for each release - edit tmpl.Dockerfile instead.\n#\n\n/' ./Dockerfile

      - if: steps.version-check.outputs.updated == 'yes'
        name: Push new dockerfile and version tag ⤴
        run: |
          git config --global user.name 'Señor Bob'
          git config --global user.email 'bot@skayo.dev'
          git add -A
          git commit -F ./version
          git tag -a "${{ steps.version-fetch.outputs.version }}" -F ./version
          git push -q --follow-tags origin main
